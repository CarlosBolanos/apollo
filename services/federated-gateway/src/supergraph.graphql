schema
  @core(feature: "https://specs.apollo.dev/core/v0.1"),
  @core(feature: "https://specs.apollo.dev/join/v0.1")
{
  query: Query
}

directive @core(feature: String!) repeatable on SCHEMA

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet) on FIELD_DEFINITION

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on OBJECT | INTERFACE

directive @join__owner(graph: join__Graph!) on OBJECT | INTERFACE

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

enum CURRENCY_CODE {
  USD
}

scalar join__FieldSet

enum join__Graph {
  PRODUCTS @join__graph(name: "products" url: "http://localhost:4003/graphql")
  REFERENCE @join__graph(name: "reference" url: "http://localhost:4002/graphql")
  REVIEWS @join__graph(name: "reviews" url: "http://localhost:4004/graphql")
}

type Money {
  amount: Float
  currencyCode: CURRENCY_CODE
}

type Price {
  cost: Money
  deal: Float
  dealSavings: Money
}

type Product
  @join__owner(graph: REFERENCE)
  @join__type(graph: REFERENCE, key: "id")
  @join__type(graph: PRODUCTS, key: "id")
  @join__type(graph: REVIEWS, key: "id")
{
  id: ID! @join__field(graph: REFERENCE)
  title: String @join__field(graph: REFERENCE)
  url: String @join__field(graph: REFERENCE)
  description: String @join__field(graph: REFERENCE)
  price: Price @join__field(graph: REFERENCE)
  salesRankOverall: Int @join__field(graph: REFERENCE)
  salesRankInCategory: Int @join__field(graph: REFERENCE)
  images(size: Int = 1000): [String] @join__field(graph: PRODUCTS)
  primaryImage(size: Int = 1000): String @join__field(graph: PRODUCTS)
  reviews: [Review] @join__field(graph: REVIEWS)
  reviewSummary: ReviewSummary @join__field(graph: REVIEWS)
}

enum ProductCategory {
  ALL
  GIFT_CARDS
  ELECTRONICS
  CAMERA_N_PHOTO
  VIDEO_GAMES
  BOOKS
  CLOTHING
}

type Query {
  product(id: ID!): Product @join__field(graph: PRODUCTS)
  reviews: [Review] @join__field(graph: REVIEWS)
}

type Review {
  id: ID!
  rating: Float
  content: String
}

type ReviewSummary {
  totalReviews: Int
  averageRating: Float
}
